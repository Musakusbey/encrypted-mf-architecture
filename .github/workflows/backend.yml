name: Backend CI/CD

on:
  push:
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"
  pull_request:
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"

jobs:
  backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        working-directory: ./backend
        run: npm ci

      - name: Lint code
        working-directory: ./backend
        run: npm run lint
        continue-on-error: true

      - name: Run unit tests
        working-directory: ./backend
        run: npm run test:coverage
        env:
          NODE_ENV: test
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db

      - name: Run integration tests
        working-directory: ./backend
        run: npm run test:integration
        env:
          NODE_ENV: test
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db

      - name: Security audit
        working-directory: ./backend
        run: npm audit --audit-level moderate

      - name: Dependency vulnerability scan
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: moderate

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/coverage/lcov.info
          flags: backend
          name: backend-coverage

      - name: Deploy to staging
        if: github.ref == 'refs/heads/main'
        working-directory: ./backend
        run: |
          echo "Deploying to staging environment..."
          # Add your deployment commands here

      - name: Deploy to production
        if: github.ref == 'refs/heads/production'
        working-directory: ./backend
        run: |
          echo "Deploying to production environment..."
          # Add your production deployment commands here
